# -*- coding: utf-8 -*-
"""MNIST Digit Classification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1S2Hw9TWMEYRE60JPSPddxdPzXhh4o-g2
"""

# Commented out IPython magic to ensure Python compatibility.
from ast import increment_lineno
import tensorflow as tf
from tensorflow import keras
import matplotlib.pyplot as plt
# %matplotlib inline
import numpy as np
import pandas as pd

(x_train,y_train) ,(x_test,y_test) = keras.datasets.mnist.load_data()

len(x_train)

len(x_test)

x_train[0].shape

x_train[0]

plt.matshow(x_train[7])

y_train[2]

y_train[:5]

x_train = x_train.reshape(len(x_train),28*28)
x_train.shape

x_test1 = x_test.reshape(len(x_test),28*28)
x_test1.shape

x_train = x_train/255
x_test1 = x_test1/255

x_train[0]

model = keras.Sequential([
    keras.layers.Dense(10,input_shape=(784,),activation='relu'),
    keras.layers.Dense(10,activation='sigmoid')
])
model.compile(
    optimizer='adam',
    loss='sparse_categorical_crossentropy',
    metrics=['accuracy']
)
model.fit(x_train,y_train,epochs=5)

model.evaluate(x_test1,y_test)
y_predicted = model.predict(x_test1)
y_predicted_labels = [np.argmax(i) for i in y_predicted]
cm = tf.math.confusion_matrix(labels = y_test,predictions=y_predicted_labels)

import seaborn as sns
plt.figure(figsize = (10,10))
sns.heatmap(tf.math.confusion_matrix(labels = y_test,predictions=y_predicted_labels),annot=True,fmt='d')
plt.xlabel('Predicted')
plt.ylabel('Truth')

np.argmax(y_predicted[0])

plt.matshow(x_test[0])